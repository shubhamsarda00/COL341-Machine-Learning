# -*- coding: utf-8 -*-
"""
Created on Thu Sep  9 09:08:02 2021

@author: Asus
"""

import sys
import numpy as np

import pandas as pd

mode=sys.argv[1]

if(mode=='a'):
    
    train=pd.read_csv(sys.argv[2])
    test=pd.read_csv(sys.argv[3])
    train=train.drop(train.columns[0],axis=1)
    test=test.drop(test.columns[0],axis=1)
    train.insert(0,"Intercept",np.ones((train.shape[0])))
    test.insert(0,"Intercept",np.ones((test.shape[0])))
    X,Y=np.array(train.iloc[:,:-1]),np.array(train.iloc[:,-1])
    X_test=np.array(test)
    W_a=np.matmul(np.linalg.inv(np.matmul(X.T,X)),np.matmul(X.T,Y))
    f = open(sys.argv[5], "w")
    for w in W_a:
        f.write(str(w)+"\n")
    f.close()
    y_pred=np.matmul(X_test,W_a)
    f = open(sys.argv[4], "w")
    for y in y_pred:
        f.write(str(y)+"\n")
    f.close()
  
elif(mode=='b'):
    def Kfold_CV(k,X):
        #np.random.shuffle(X)
        subsets=np.array_split(X,k)
        splits=[]
        for i in range(k):
            test=subsets[i]
            if i==0:
                train=np.array(subsets[i+1:])
                train=train.reshape((-1,train.shape[-1]))
            elif i==k-1:
                train=np.array(subsets[:i])
                train=train.reshape((-1,train.shape[-1]))
            else:    
                train=np.concatenate((subsets[:i],subsets[i+1:]))
                train=train.reshape((-1,train.shape[-1]))
            x_test,y_test=test[:,:-1],test[:,-1]
            x_train,y_train=train[:,:-1],train[:,-1]
            splits.append((x_train,x_test,y_train,y_test))
        return splits
    train=pd.read_csv(sys.argv[2])
    test=pd.read_csv(sys.argv[3])
    train=train.drop(train.columns[0],axis=1)
    test=test.drop(test.columns[0],axis=1)
    train.insert(0,"Intercept",np.ones((train.shape[0])))
    test.insert(0,"Intercept",np.ones((test.shape[0])))
    X_test=np.array(test)
    train=np.array(train)
    
    W_b=0
    l_final=0
    error=float("inf")
    
    f = open(sys.argv[4],'r')
    lambdas=f.read()
    f.close()
    for l in list(map(float,lambdas.split(','))):
        splits=Kfold_CV(10,train)
        #print(l)
        e=0
        for (x_train,x_test,y_train,y_test) in splits:
            temp_w=np.matmul(np.linalg.inv(np.matmul(x_train.T,x_train)+l*np.identity(x_train.shape[-1])),np.matmul(x_train.T,y_train))
            preds=np.matmul(x_test,temp_w)
            #e+=(np.sqrt(np.square(preds-y_test).sum()))/np.sqrt(np.square(y_test).sum())
            e+=np.linalg.norm(preds-y_test)/np.linalg.norm(y_test)
        e/=10
        #print(e)
        if(e<error):
            error=e
            l_final=l
            
    X,Y=train[:,:-1],train[:,-1]
    W_b=np.matmul(np.linalg.inv(np.matmul(X.T,X)+l_final*np.identity(X.shape[-1])),np.matmul(X.T,Y))            
    
    y_pred=np.matmul(X_test,W_b)
    
    f = open(sys.argv[6], "w")
    for w in W_b:
        f.write(str(w)+"\n")
    f.close()
    
    f = open(sys.argv[5], "w")
    for y in y_pred:
        f.write(str(y)+"\n")
    f.close()
    
    f = open(sys.argv[7], "w")
    f.write(str(l_final))
    f.close()
else:
    
    train_df=pd.read_csv(sys.argv[2])
    test_df=pd.read_csv(sys.argv[3])
    train_df=train_df.drop(train_df.columns[0],axis=1)
    test_df=test_df.drop(test_df.columns[0],axis=1)
    # train_df.insert(0,"Intercept",np.ones((train_df.shape[0])))
    
    # test.insert(0,"Intercept",np.ones((test.shape[0])))
    X=np.concatenate((train_df[['Emergency Department Indicator','Length of Stay','Health Service Area','Patient Disposition',
                              'Zip Code - 3 digits','CCS Diagnosis Description','Birth Weight','Operating Certificate Number']],
#                      np.multiply(power_transform(train_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),power_transform(train_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),power_transform(train_df['APR MDC Code'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(train_df['APR Severity of Illness Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['APR MDC Code'].to_numpy().reshape(-1,1)),power_transform(train_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(train_df['Length of Stay'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['APR MDC Description'].to_numpy().reshape(-1,1)),power_transform(train_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(train_df['Health Service Area'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(train_df['Health Service Area'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(train_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(train_df['APR MDC Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),train_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.square(power_transform(train_df['APR Risk of Mortality'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),power_transform(train_df['Length of Stay'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Health Service Area'].to_numpy().reshape(-1,1)),train_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Health Service Area'].to_numpy().reshape(-1,1)),train_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(train_df['Ethnicity'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1)),train_df['Length of Stay'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.multiply(power_transform(train_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(train_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1)),power_transform(train_df['APR Risk of Mortality'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(train_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1)),power_transform(train_df['Age Group'].to_numpy().reshape(-1,1))).reshape(-1,1),
                     
                    
                    np.square(train_df['APR Medical Surgical Description'].to_numpy()).reshape(-1,1),
                     np.multiply(train_df['APR Medical Surgical Description'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(train_df['APR Risk of Mortality'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()), np.exp(train_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1),
                    np.multiply(train_df['Health Service Area'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(train_df['Health Service Area'].to_numpy(),train_df['Ethnicity'].to_numpy()).reshape(-1,1),
                    np.multiply(train_df['Health Service Area'].to_numpy(),train_df['Emergency Department Indicator'].to_numpy()).reshape(-1,1),
                    np.multiply(train_df['Age Group'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                    np.multiply(train_df['Race'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(train_df['Ethnicity'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                    np.square(train_df['Type of Admission'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Health Service Area'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Gender'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Age Group'].to_numpy()).reshape(-1,1), 
                    
                     np.multiply(train_df['APR Severity of Illness Code'].to_numpy(),train_df['Emergency Department Indicator'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['APR Medical Surgical Description'].to_numpy()).reshape(-1,1),
                     np.multiply(train_df['APR Risk of Mortality'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                    np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1),  
                    np.multiply(train_df['Age Group'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1),  
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Race'].to_numpy()).reshape(-1,1), 
                    np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1),  
                   np.multiply(train_df['Health Service Area'].to_numpy(),train_df['APR Severity of Illness Description'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1),  
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                    np.multiply(train_df['APR Risk of Mortality'].to_numpy(),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                    np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),np.exp(train_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1), 
                    np.multiply(train_df['Payment Typology 3'].to_numpy(),train_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                    np.multiply(train_df['Payment Typology 3'].to_numpy(),train_df['Payment Typology 1'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['Type of Admission'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['Ethnicity'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['Health Service Area'].to_numpy(),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['Gender'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['APR Medical Surgical Description'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['APR Severity of Illness Code'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                   np.square(train_df['Payment Typology 1'].to_numpy()).reshape(-1,1),
                   np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['Length of Stay'].to_numpy()).reshape(-1,1),  
                   np.multiply(train_df['Age Group'].to_numpy(),train_df['Health Service Area'].to_numpy()).reshape(-1,1), 
                   np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['Type of Admission'].to_numpy()).reshape(-1,1),  
                    np.multiply(train_df['Health Service Area'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Age Group'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['Health Service Area'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Health Service Area'].to_numpy(),train_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['APR Severity of Illness Code'].to_numpy(),train_df['Age Group'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1),
                   np.square(train_df['Payment Typology 2'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['Type of Admission'].to_numpy(),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['Ethnicity'].to_numpy()).reshape(-1,1),
                   np.multiply(train_df['Health Service Area'].to_numpy(),train_df['Hospital County'].to_numpy()).reshape(-1,1),
                   np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['Age Group'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1),  
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Patient Disposition'].to_numpy()).reshape(-1,1),  
                  np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Payment Typology 1'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Gender'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Race'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Type of Admission'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['Payment Typology 1'].to_numpy(),train_df['Health Service Area'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['Race'].to_numpy()),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                   np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Payment Typology 1'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['APR DRG Description'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['Gender'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),np.exp(train_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['APR Severity of Illness Code'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                  np.square(train_df['Hospital County'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['Patient Disposition'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),
                  np.multiply(train_df['Length of Stay'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['Age Group'].to_numpy()).reshape(-1,1),
                 np.multiply(train_df['Patient Disposition'].to_numpy(),train_df['Hospital County'].to_numpy()).reshape(-1,1),
                 np.square(np.exp(train_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1),
                 np.multiply(train_df['Patient Disposition'].to_numpy(),train_df['APR MDC Description'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(train_df['Gender'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['Payment Typology 2'].to_numpy(),train_df['Hospital County'].to_numpy()).reshape(-1,1),
                 np.multiply(train_df['Length of Stay'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['Age Group'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['Ethnicity'].to_numpy(),train_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Ethnicity'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                  np.multiply(train_df['Health Service Area'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['APR Severity of Illness Description'].to_numpy(),train_df['Payment Typology 1'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['Type of Admission'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                 np.square(train_df['APR Severity of Illness Description'].to_numpy()).reshape(-1,1),
                np.multiply(np.exp(train_df['Race'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.square(train_df['Length of Stay'].to_numpy()).reshape(-1,1),
                 np.multiply(train_df['Length of Stay'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Length of Stay'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),np.exp(train_df['APR Risk of Mortality'].to_numpy())).reshape(-1,1), 
               np.multiply(train_df['Health Service Area'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),np.exp(train_df['APR Severity of Illness Description'].to_numpy())).reshape(-1,1), 
               np.multiply(train_df['Health Service Area'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Age Group'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Type of Admission'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Hospital County'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df["Facility Name"].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Gender'].to_numpy()),np.exp(train_df["Race"].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df["Zip Code - 3 digits"].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Type of Admission'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Race'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Length of Stay'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Patient Disposition'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Length of Stay'].to_numpy(),np.exp(train_df['Health Service Area'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['Hospital County'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Description'].to_numpy(),train_df['Health Service Area'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),np.exp(train_df['APR Risk of Mortality'].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(train_df['Gender'].to_numpy()),train_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Procedure Description'].to_numpy(),train_df['Ethnicity'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['Health Service Area'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),np.exp(train_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),np.exp(train_df['Health Service Area'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Race'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Code'].to_numpy(),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR MDC Description'].to_numpy(),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR MDC Description'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Zip Code - 3 digits'].to_numpy(),np.exp(train_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Payment Typology 2'].to_numpy(),np.exp(train_df['Race'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['APR DRG Description'].to_numpy(),np.exp(train_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1),
                np.multiply(train_df['Facility Name'].to_numpy(),np.exp(train_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),np.exp(train_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['Facility Id'].to_numpy(),train_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Gender'].to_numpy()),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Facility Name'].to_numpy(),train_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR MDC Description'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Description'].to_numpy()),np.exp(train_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                 np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Age Group'].to_numpy(),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
                 np.multiply(train_df['Patient Disposition'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),np.exp(train_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.multiply(train_df['Type of Admission'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Race'].to_numpy()),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Length of Stay'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Code'].to_numpy(),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Patient Disposition'].to_numpy(),train_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Gender'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Code'].to_numpy(),train_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Emergency Department Indicator'].to_numpy()),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Facility Id'].to_numpy(),train_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Description'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Code'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Race'].to_numpy()),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                 np.square(train_df['APR DRG Description'].to_numpy()).reshape(-1,1),
                np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),np.exp(train_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.square(train_df['Facility Name'].to_numpy()).reshape(-1,1),
                np.square(train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1),
                np.multiply(train_df['CCS Procedure Description'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['Facility Id'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Procedure Code'].to_numpy(),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Gender'].to_numpy()),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Race'].to_numpy()),np.exp(train_df['Age Group'].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(train_df['APR DRG Description'].to_numpy(),train_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),train_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
                 np.square(train_df['APR DRG Code'].to_numpy()).reshape(-1,1),
               np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['Facility Name'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['APR MDC Code'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(train_df['Age Group'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['Hospital County'].to_numpy(),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['Facility Name'].to_numpy(),train_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['Facility Name'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.square(train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1),
                np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),np.exp(train_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1), 
              np.multiply(np.exp(train_df['Race'].to_numpy()),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
               np.multiply(train_df['CCS Procedure Description'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['APR MDC Description'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['CCS Procedure Description'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['Zip Code - 3 digits'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
              np.multiply(np.exp(train_df['Race'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.square(train_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1),
              np.multiply(train_df['CCS Procedure Code'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['APR DRG Code'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['APR DRG Code'].to_numpy(),np.exp(train_df['Ethnicity'].to_numpy())).reshape(-1,1), 
              np.multiply(train_df['Facility Id'].to_numpy(),train_df['Type of Admission'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['Facility Id'].to_numpy(),train_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['Facility Name'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
              np.multiply(np.exp(train_df['Age Group'].to_numpy()),np.exp(train_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1), 
              np.multiply(train_df['Facility Id'].to_numpy(),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(train_df['Facility Id'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),np.exp(train_df['Health Service Area'].to_numpy())).reshape(-1,1), 
               np.multiply(train_df['APR DRG Code'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
             np.multiply(train_df['Zip Code - 3 digits'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
             np.multiply(train_df['Facility Id'].to_numpy(),train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
              np.square(train_df['CCS Procedure Code'].to_numpy()).reshape(-1,1),
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['Facility Name'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),np.exp(train_df['Race'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['CCS Diagnosis Code'].to_numpy(),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
             np.multiply(train_df['Facility Id'].to_numpy(),train_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
             np.multiply(train_df['Facility Id'].to_numpy(),train_df['APR DRG Code'].to_numpy()).reshape(-1,1),
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
             np.multiply(train_df['Hospital County'].to_numpy(),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['APR Severity of Illness Description'].to_numpy()),np.exp(train_df['Health Service Area'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['Facility Id'].to_numpy()).reshape(-1,1), 
             np.multiply(train_df['Facility Id'].to_numpy(),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),train_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
             np.exp(train_df['APR MDC Description'].to_numpy()).reshape(-1,1),
             np.multiply(np.exp(train_df['APR Medical Surgical Description'].to_numpy()),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['APR Risk of Mortality'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Race'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Length of Stay'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Length of Stay'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Type of Admission'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Payment Typology 2'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['APR Severity of Illness Code'].to_numpy()),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Payment Typology 2'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Hospital County'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Payment Typology 1'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Hospital County'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['APR DRG Description'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['CCS Diagnosis Description'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['APR Severity of Illness Description'].to_numpy()),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['CCS Procedure Description'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Facility Name'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['Ethnicity'].to_numpy()),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['CCS Procedure Code'].to_numpy(),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['APR Risk of Mortality'].to_numpy()),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['CCS Procedure Code'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Zip Code - 3 digits'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(train_df['Facility Id'].to_numpy(),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),np.exp(train_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['Health Service Area'].to_numpy()),np.exp(train_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Health Service Area'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Ethnicity'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['APR Severity of Illness Code'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['APR Severity of Illness Description'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Type of Admission'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['APR MDC Description'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Patient Disposition'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),np.exp(train_df['APR Medical Surgical Description'].to_numpy())).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),np.exp(train_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Age Group'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Payment Typology 1'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Payment Typology 2'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),train_df['Facility Name'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),np.exp(train_df['Gender'].to_numpy())).reshape(-1,1),         
             np.multiply(np.exp(train_df['Length of Stay'].to_numpy()),np.exp(train_df['Race'].to_numpy())).reshape(-1,1)                
                              ),axis=1)

    Y=train_df.iloc[:,-1:].to_numpy()
    X_test=np.concatenate((test_df[['Emergency Department Indicator','Length of Stay','Health Service Area','Patient Disposition',
                              'Zip Code - 3 digits','CCS Diagnosis Description','Birth Weight','Operating Certificate Number']],
#                      np.multiply(power_transform(test_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),power_transform(test_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),power_transform(test_df['APR MDC Code'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(test_df['APR Severity of Illness Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['APR MDC Code'].to_numpy().reshape(-1,1)),power_transform(test_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(test_df['Length of Stay'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['APR MDC Description'].to_numpy().reshape(-1,1)),power_transform(test_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(test_df['Health Service Area'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(test_df['Health Service Area'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.square(power_transform(test_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(test_df['APR MDC Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),test_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.square(power_transform(test_df['APR Risk of Mortality'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)),power_transform(test_df['Length of Stay'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Health Service Area'].to_numpy().reshape(-1,1)),test_df['Emergency Department Indicator'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Health Service Area'].to_numpy().reshape(-1,1)),test_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(test_df['Ethnicity'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1)),test_df['Length of Stay'].to_numpy().reshape(-1,1)).reshape(-1,1),
#                      np.multiply(power_transform(test_df['Length of Stay'].to_numpy().reshape(-1,1)),power_transform(test_df['APR Medical Surgical Description'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1)),power_transform(test_df['APR Risk of Mortality'].to_numpy().reshape(-1,1))).reshape(-1,1),
#                      np.multiply(power_transform(test_df['APR Severity of Illness Code'].to_numpy().reshape(-1,1)),power_transform(test_df['Age Group'].to_numpy().reshape(-1,1))).reshape(-1,1),
                     
                    
                    np.square(test_df['APR Medical Surgical Description'].to_numpy()).reshape(-1,1),
                     np.multiply(test_df['APR Medical Surgical Description'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(test_df['APR Risk of Mortality'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()), np.exp(test_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1),
                    np.multiply(test_df['Health Service Area'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(test_df['Health Service Area'].to_numpy(),test_df['Ethnicity'].to_numpy()).reshape(-1,1),
                    np.multiply(test_df['Health Service Area'].to_numpy(),test_df['Emergency Department Indicator'].to_numpy()).reshape(-1,1),
                    np.multiply(test_df['Age Group'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                    np.multiply(test_df['Race'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1),
                    np.multiply(test_df['Ethnicity'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                    np.square(test_df['Type of Admission'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Health Service Area'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Gender'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Age Group'].to_numpy()).reshape(-1,1), 
                    
                     np.multiply(test_df['APR Severity of Illness Code'].to_numpy(),test_df['Emergency Department Indicator'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['APR Medical Surgical Description'].to_numpy()).reshape(-1,1),
                     np.multiply(test_df['APR Risk of Mortality'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                    np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1),  
                    np.multiply(test_df['Age Group'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1),  
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Race'].to_numpy()).reshape(-1,1), 
                    np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1),  
                   np.multiply(test_df['Health Service Area'].to_numpy(),test_df['APR Severity of Illness Description'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1),  
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                    np.multiply(test_df['APR Risk of Mortality'].to_numpy(),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                    np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                    np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),np.exp(test_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1), 
                    np.multiply(test_df['Payment Typology 3'].to_numpy(),test_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                    np.multiply(test_df['Payment Typology 3'].to_numpy(),test_df['Payment Typology 1'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['Type of Admission'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['Ethnicity'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['Health Service Area'].to_numpy(),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['Gender'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['APR Medical Surgical Description'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['APR Severity of Illness Code'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                   np.square(test_df['Payment Typology 1'].to_numpy()).reshape(-1,1),
                   np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['Length of Stay'].to_numpy()).reshape(-1,1),  
                   np.multiply(test_df['Age Group'].to_numpy(),test_df['Health Service Area'].to_numpy()).reshape(-1,1), 
                   np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['Type of Admission'].to_numpy()).reshape(-1,1),  
                    np.multiply(test_df['Health Service Area'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Age Group'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['Health Service Area'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Health Service Area'].to_numpy(),test_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['APR Severity of Illness Code'].to_numpy(),test_df['Age Group'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1),
                   np.square(test_df['Payment Typology 2'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['Type of Admission'].to_numpy(),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['Ethnicity'].to_numpy()).reshape(-1,1),
                   np.multiply(test_df['Health Service Area'].to_numpy(),test_df['Hospital County'].to_numpy()).reshape(-1,1),
                   np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['Age Group'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1),  
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Patient Disposition'].to_numpy()).reshape(-1,1),  
                  np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Payment Typology 1'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Gender'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Race'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Type of Admission'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['Payment Typology 1'].to_numpy(),test_df['Health Service Area'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['Race'].to_numpy()),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                   np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Payment Typology 1'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['APR DRG Description'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['Gender'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1),
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),np.exp(test_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['APR Severity of Illness Code'].to_numpy()).reshape(-1,1), 
                  np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                  np.square(test_df['Hospital County'].to_numpy()).reshape(-1,1),
                    np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['Patient Disposition'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),
                  np.multiply(test_df['Length of Stay'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['Age Group'].to_numpy()).reshape(-1,1),
                 np.multiply(test_df['Patient Disposition'].to_numpy(),test_df['Hospital County'].to_numpy()).reshape(-1,1),
                 np.square(np.exp(test_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1),
                 np.multiply(test_df['Patient Disposition'].to_numpy(),test_df['APR MDC Description'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(test_df['Gender'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['Payment Typology 2'].to_numpy(),test_df['Hospital County'].to_numpy()).reshape(-1,1),
                 np.multiply(test_df['Length of Stay'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['Age Group'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['Ethnicity'].to_numpy(),test_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1),
                 np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Ethnicity'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                  np.multiply(test_df['Health Service Area'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['APR Severity of Illness Description'].to_numpy(),test_df['Payment Typology 1'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['Type of Admission'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                 np.square(test_df['APR Severity of Illness Description'].to_numpy()).reshape(-1,1),
                np.multiply(np.exp(test_df['Race'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                 np.square(test_df['Length of Stay'].to_numpy()).reshape(-1,1),
                 np.multiply(test_df['Length of Stay'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Length of Stay'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),np.exp(test_df['APR Risk of Mortality'].to_numpy())).reshape(-1,1), 
               np.multiply(test_df['Health Service Area'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),np.exp(test_df['APR Severity of Illness Description'].to_numpy())).reshape(-1,1), 
               np.multiply(test_df['Health Service Area'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Age Group'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Type of Admission'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Hospital County'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df["Facility Name"].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Gender'].to_numpy()),np.exp(test_df["Race"].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df["Zip Code - 3 digits"].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Type of Admission'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Race'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Length of Stay'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Patient Disposition'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Length of Stay'].to_numpy(),np.exp(test_df['Health Service Area'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['Hospital County'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Description'].to_numpy(),test_df['Health Service Area'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),np.exp(test_df['APR Risk of Mortality'].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(test_df['Gender'].to_numpy()),test_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Procedure Description'].to_numpy(),test_df['Ethnicity'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['Health Service Area'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),np.exp(test_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),np.exp(test_df['Health Service Area'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Race'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Code'].to_numpy(),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR MDC Description'].to_numpy(),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR MDC Description'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Zip Code - 3 digits'].to_numpy(),np.exp(test_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Payment Typology 2'].to_numpy(),np.exp(test_df['Race'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['APR DRG Description'].to_numpy(),np.exp(test_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1),
                np.multiply(test_df['Facility Name'].to_numpy(),np.exp(test_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),np.exp(test_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['Facility Id'].to_numpy(),test_df['Length of Stay'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Gender'].to_numpy()),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Facility Name'].to_numpy(),test_df['Payment Typology 3'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR MDC Description'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Description'].to_numpy()),np.exp(test_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                 np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Age Group'].to_numpy(),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
                 np.multiply(test_df['Patient Disposition'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),np.exp(test_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.multiply(test_df['Type of Admission'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Race'].to_numpy()),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Length of Stay'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Code'].to_numpy(),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Patient Disposition'].to_numpy(),test_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Gender'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Code'].to_numpy(),test_df['Payment Typology 2'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Emergency Department Indicator'].to_numpy()),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Facility Id'].to_numpy(),test_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Description'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Code'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Race'].to_numpy()),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
                 np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                 np.square(test_df['APR DRG Description'].to_numpy()).reshape(-1,1),
                np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),np.exp(test_df['Ethnicity'].to_numpy())).reshape(-1,1), 
                np.square(test_df['Facility Name'].to_numpy()).reshape(-1,1),
                np.square(test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1),
                np.multiply(test_df['CCS Procedure Description'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['Facility Id'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Procedure Code'].to_numpy(),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Gender'].to_numpy()),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Race'].to_numpy()),np.exp(test_df['Age Group'].to_numpy())).reshape(-1,1), 
                np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['Hospital County'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
                np.multiply(test_df['APR DRG Description'].to_numpy(),test_df['Patient Disposition'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),test_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1), 
                np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
                 np.square(test_df['APR DRG Code'].to_numpy()).reshape(-1,1),
               np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['APR MDC Code'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['Facility Name'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['APR MDC Code'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
               np.multiply(np.exp(test_df['Age Group'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['Hospital County'].to_numpy(),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['Facility Name'].to_numpy(),test_df['APR Risk of Mortality'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['Facility Name'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
                np.square(test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1),
                np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),np.exp(test_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1), 
              np.multiply(np.exp(test_df['Race'].to_numpy()),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
               np.multiply(test_df['CCS Procedure Description'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['APR MDC Description'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['CCS Procedure Description'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['Zip Code - 3 digits'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
              np.multiply(np.exp(test_df['Race'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.square(test_df['CCS Diagnosis Description'].to_numpy()).reshape(-1,1),
              np.multiply(test_df['CCS Procedure Code'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['APR DRG Code'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['APR DRG Code'].to_numpy(),np.exp(test_df['Ethnicity'].to_numpy())).reshape(-1,1), 
              np.multiply(test_df['Facility Id'].to_numpy(),test_df['Type of Admission'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['Facility Id'].to_numpy(),test_df['APR MDC Description'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['Facility Name'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
              np.multiply(np.exp(test_df['Age Group'].to_numpy()),np.exp(test_df['APR Severity of Illness Code'].to_numpy())).reshape(-1,1), 
              np.multiply(test_df['Facility Id'].to_numpy(),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
              np.multiply(test_df['Facility Id'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
              np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),np.exp(test_df['Health Service Area'].to_numpy())).reshape(-1,1), 
               np.multiply(test_df['APR DRG Code'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
             np.multiply(test_df['Zip Code - 3 digits'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
             np.multiply(test_df['Facility Id'].to_numpy(),test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1), 
              np.square(test_df['CCS Procedure Code'].to_numpy()).reshape(-1,1),
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['Facility Name'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),np.exp(test_df['Race'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['CCS Diagnosis Code'].to_numpy(),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1), 
             np.multiply(test_df['Facility Id'].to_numpy(),test_df['CCS Procedure Description'].to_numpy()).reshape(-1,1), 
             np.multiply(test_df['Facility Id'].to_numpy(),test_df['APR DRG Code'].to_numpy()).reshape(-1,1),
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['APR DRG Code'].to_numpy()).reshape(-1,1), 
             np.multiply(test_df['Hospital County'].to_numpy(),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['APR Severity of Illness Description'].to_numpy()),np.exp(test_df['Health Service Area'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['Facility Id'].to_numpy()).reshape(-1,1), 
             np.multiply(test_df['Facility Id'].to_numpy(),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['CCS Diagnosis Code'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),test_df['APR DRG Description'].to_numpy()).reshape(-1,1), 
             np.exp(test_df['APR MDC Description'].to_numpy()).reshape(-1,1),
             np.multiply(np.exp(test_df['APR Medical Surgical Description'].to_numpy()),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['APR Risk of Mortality'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Race'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Length of Stay'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Length of Stay'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Type of Admission'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Payment Typology 2'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['APR Severity of Illness Code'].to_numpy()),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Payment Typology 2'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Hospital County'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Payment Typology 1'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Hospital County'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['APR DRG Description'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['CCS Diagnosis Description'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['APR Severity of Illness Description'].to_numpy()),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['CCS Procedure Description'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Facility Name'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['Ethnicity'].to_numpy()),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['CCS Procedure Code'].to_numpy(),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['APR Risk of Mortality'].to_numpy()),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['CCS Procedure Code'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Zip Code - 3 digits'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(test_df['Facility Id'].to_numpy(),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),np.exp(test_df['APR MDC Code'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['Health Service Area'].to_numpy()),np.exp(test_df['APR MDC Description'].to_numpy())).reshape(-1,1), 
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Health Service Area'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Ethnicity'].to_numpy()).reshape(-1,1), 
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['APR Severity of Illness Code'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['APR Severity of Illness Description'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Type of Admission'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['APR MDC Description'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Patient Disposition'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),np.exp(test_df['APR Medical Surgical Description'].to_numpy())).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),np.exp(test_df['Emergency Department Indicator'].to_numpy())).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Age Group'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Payment Typology 1'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Zip Code - 3 digits'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Payment Typology 2'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),test_df['Facility Name'].to_numpy()).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),np.exp(test_df['Gender'].to_numpy())).reshape(-1,1),         
             np.multiply(np.exp(test_df['Length of Stay'].to_numpy()),np.exp(test_df['Race'].to_numpy())).reshape(-1,1)                
                              ),axis=1)
    
    W_c=np.matmul(np.linalg.inv(np.matmul(X.T,X)),np.matmul(X.T,Y))
    #W_c=np.matmul(np.linalg.pinv(X),Y)
    y_pred=np.matmul(X_test,W_c)
    #Y_test=test_df.iloc[:,-1]
    y_pred=y_pred.squeeze()
    #print(np.sqrt(np.square(y_pred-Y_test).mean()),1-(np.square(y_pred-Y_test).sum())/(np.square(Y_test).sum()))
    
    f = open(sys.argv[4], "w")
    for y in y_pred:
        f.write(str(y)+"\n")
    f.close()
    


